count_matrix_test |>
left_join(meta_subset,
by = Sample) |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
count_matrix_test |>
left_join(meta_subset,
by = "Sample") |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
meta_subset <- meta |>
select(Run, Host_disease) |>
rename(Sample = Run) |>
slice_head(n = 10)
count_matrix_test |>
left_join(meta_subset,
by = "Sample") |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
meta_subset <- meta |>
select(Run, Host_disease) |>
rename(Sample = Run) |>
slice_head(n = 10) |>
pull(Host_disease)
count_matrix_test |>
left_join(meta_subset,
by = "Sample") |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
meta_subset
count_matrix_test |>
left_join(meta_subset,
by = "Sample") |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset, copy = TRUE) |>
as_tibble(rownames = "Sample")
count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
meta_subset <- meta |>
select(Run, Host_disease) |>
rename(Sample = Run) |>
slice_head(n = 10)
count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
View(meta_subset)
View(count_matrix)
View(meta)
meta_subset <- meta |>
select(Run, host_sex) |>
rename(Sample = Run) |>
slice_head(n = 10)
count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
meta_subset <- meta |>
select(Run, host_sex) |>
rename(Sample = Run) |>
slice_head(n = 10) |>
pull(host_sex)
count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber(groups = meta_subset) |>
as_tibble(rownames = "Sample")
count_matrix_test |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon")
count_matrix_test |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample")
count_matrix |>
slice_head(n = 10) |>
select(Sample, Actinomyces,
Adlercreutzia, Agathobacter, Akkermansia)
# Create a small subset used for testing
count_matrix_test <- count_matrix |>
slice_head(n = 10) |>
select(Sample, Actinomyces,
Adlercreutzia, Agathobacter, Akkermansia)
saveRDS(object = count_matrix_test,
file = "data/count_matrix/count_matrix_test.rds")
library("tidymodels")
tidymodels::tidymodels_prefer()
count_matrix_test <- count_matrix |>
slice_head(n = 10) |>
select(Sample, Actinomyces,
Adlercreutzia, Agathobacter, Akkermansia)
count_matrix_test
count_matrix_test <- readRDS(file = "data/count_matrix/count_matrix_test.rds")
count_matrix_test
count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber() |>
as_tibble(rownames = "Sample")
count_matrix_test |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample")
richness <- count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber() |>
as_tibble(rownames = "Sample")
count_matrix_test |>
left_join(richness,
by = "Sample")
richness <- count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber() |>
as_tibble(rownames = "Sample")
count_matrix_test |>
left_join(richness,
by = "Sample")
richness <- count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber() |>
rename(Richness = value) |>
as_tibble(rownames = "Sample")
richness <- count_matrix_test |>
column_to_rownames(var = "Sample") |>
specnumber() |>
as_tibble(rownames = "Sample") |>
rename(Richness = value)
count_matrix_test |>
left_join(richness,
by = "Sample")
count_matrix_test |>
left_join(shannon,
by = "Sample")
shannon <- count_matrix_test |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample") |>
rename(Shannon = value)
count_matrix_test |>
left_join(shannon,
by = "Sample")
set.seed(1337)
library("tidymodels")
tidymodels::tidymodels_prefer()
library("vegan")
count_matrix <- readRDS(file = "data/count_matrix/count_matrix.rds")
meta <- read.csv(file = "data/metadata.txt") |>
as_tibble() |>
select(Run, chem_administration, ETHNICITY, geo_loc_name,
Host_age, host_body_mass_index, Host_disease, host_phenotype, host_sex) |>
rename(Sample = Run,
Treatment = chem_administration,
Ethnicity = ETHNICITY,
Location = geo_loc_name,
Age = Host_age,
BMI = host_body_mass_index,
Disease_severity = Host_disease,
EDSS = host_phenotype,
Sex = host_sex) |>
mutate(Patient_status = case_when(Disease_severity == "1HealthyControl" ~ "Healthy",
TRUE ~ "MS"),
EDSS = as.factor(EDSS),
EDSS = case_when(is.na(EDSS) & Disease_severity == "1HealthyControl" ~ "-1",
is.na(EDSS) & Disease_severity != "1HealthyControl" ~ "Unknown",
TRUE ~ EDSS),
EDSS = as.factor(EDSS))
shannon <- count_matrix |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample") |>
rename(Shannon = value) |>
left_join(meta,
by = "Sample")
shannon |>
ggplot(aes(x = Shannon,
fill = Patient_status)) +
geom_density(alpha = 0.7) +
facet_wrap(~ Patient_status)
wilcox.test(Shannon ~ Patient_status,
data = shannon) |>
broom::tidy()
View(meta)
View(shannon)
shannon_men <- count_matrix |>
filter(Sex == "men") |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample") |>
rename(Shannon = value) |>
left_join(meta,
by = "Sample")
View(count_matrix)
colnames(meta)
shannon_men <- count_matrix |>
left_join(meta,
by = "Sample") |>
filter(Sex == "men") |>
select(-c(Treatment, Ethnicity, Location, Age, BMI, Disease_severity,
EDSS, Sex, Patient_status)) |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample") |>
rename(Shannon = value)
shannon_men <- count_matrix |>
left_join(meta,
by = "Sample") |>
filter(Sex == "men") |>
select(-c(Treatment, Ethnicity, Location, Age, BMI, Disease_severity,
EDSS, Sex, Patient_status)) |>
column_to_rownames(var = "Sample") |> View()
shannon_men <- count_matrix |>
left_join(meta,
by = "Sample") |>
filter(Sex == "male") |>
select(-c(Treatment, Ethnicity, Location, Age, BMI, Disease_severity,
EDSS, Sex, Patient_status)) |>
column_to_rownames(var = "Sample") |> View()
shannon_men <- count_matrix |>
left_join(meta,
by = "Sample") |>
filter(Sex == "male") |>
select(-c(Treatment, Ethnicity, Location, Age, BMI, Disease_severity,
EDSS, Sex, Patient_status)) |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample") |>
rename(Shannon = value)
View(count_matrix)
View(shannon_men)
shannon_men <- count_matrix |>
left_join(meta,
by = "Sample") |>
filter(Sex == "male") |>
select(-c(Treatment, Ethnicity, Location, Age, BMI, Disease_severity,
EDSS, Sex, Patient_status)) |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample") |>
rename(Shannon = value) |>
left_join(meta,
by = "Sample")
View(shannon)
View(shannon_men)
readRDS(file = "data/count_matrix/count_matrix.rds") |>
select(-"NA")
set.seed(1337)
library("tidymodels")
tidymodels::tidymodels_prefer()
library("vegan")
count_matrix <- readRDS(file = "data/count_matrix/count_matrix.rds") |>
select(-"NA")
meta <- read.csv(file = "data/metadata.txt") |>
as_tibble() |>
select(Run, chem_administration, ETHNICITY, geo_loc_name,
Host_age, host_body_mass_index, Host_disease, host_phenotype, host_sex) |>
rename(Sample = Run,
Treatment = chem_administration,
Ethnicity = ETHNICITY,
Location = geo_loc_name,
Age = Host_age,
BMI = host_body_mass_index,
Disease_severity = Host_disease,
EDSS = host_phenotype,
Sex = host_sex) |>
mutate(Patient_status = case_when(Disease_severity == "1HealthyControl" ~ "Healthy",
TRUE ~ "MS"),
EDSS = as.factor(EDSS),
EDSS = case_when(is.na(EDSS) & Disease_severity == "1HealthyControl" ~ "-1",
is.na(EDSS) & Disease_severity != "1HealthyControl" ~ "Unknown",
TRUE ~ EDSS),
EDSS = as.factor(EDSS))
shannon <- count_matrix |>
column_to_rownames(var = "Sample") |>
diversity(index = "shannon") |>
as_tibble(rownames = "Sample") |>
rename(Shannon = value) |>
left_join(meta,
by = "Sample")
shannon |>
ggplot(aes(x = Shannon,
fill = Patient_status)) +
geom_density(alpha = 0.7) +
facet_wrap(~ Patient_status)
wilcox.test(Shannon ~ Patient_status,
data = shannon) |>
broom::tidy()
?crossing
View(meta)
meta |> expand(Disease_severity)
meta |> expand(Disease_severity, Sex)
meta |> expand(nesting(Disease_severity))
Shannon |>
ggplot(aes(x = Patient_status,
y = Shannon)) +
geom_boxplot()
shannon |>
ggplot(aes(x = Patient_status,
y = Shannon)) +
geom_boxplot()
shannon |>
ggplot(aes(x = Patient_status,
y = Shannon,
color = Patient_status)) +
geom_boxplot()
shannon |>
ggplot(aes(x = Patient_status,
y = Shannon,
fill = Patient_status)) +
geom_boxplot()
shannon |>
ggplot(aes(y = Shannon,
fill = Patient_status)) +
geom_boxplot()
meta |>
ggplot(aes(x = Age)) +
geom_histogram(binwidth = 5)
meta |>
ggplot(aes(x = Age)) +
geom_histogram(binwidth = 1)
meta |>
ggplot(aes(x = BMI)) +
geom_histogram(binwidth = 1)
meta |>
ggplot(aes(x = EDSS)) +
geom_histogram(binwidth = 1)
meta |>
ggplot(aes(x = EDSS)) +
geom_histogram(binwidth = 1, stat = "count")
set.seed(1337)
library("tidymodels")
tidymodels::tidymodels_prefer()
data("iris")
iris <- iris |>
tibble::as_tibble()
mtcars
mtcars <- mtcars |>
as_tibble()
View(mtcars)
mtcars |>
ggplot(aes(x = wt,
y = hp,
colour = mpg)) +
geom_point()
mtcars |>
ggplot(aes(x = wt,
y = disp,
colour = mpg)) +
geom_point()
mtcars |>
ggplot(aes(x = hp,
y = disp,
colour = qsec)) +
geom_point()
mtcars |>
ggplot(aes(x = wt,
y = disp,
colour = mpg)) +
geom_point()
mtcars |>
ggplot(aes(x = wt,
y = disp,
colour = mpg)) +
geom_point(size = 3)
mtcars |>
ggplot(aes(x = wt,
y = disp,
colour = mpg)) +
geom_point(size = 3) +
labs(title = "Disp vs Weight",
x = "Weight",
y = "Displacement",
colour = "Miles per gallon")
mtcars |>
ggplot(aes(x = wt,
y = cyl,
colour = mpg)) +
geom_point(size = 3) +
labs(title = "Disp vs Weight",
x = "Weight",
y = "Displacement",
colour = "Miles per gallon")
disp
mtcars |>
ggplot(aes(x = wt,
y = disp,
colour = mpg)) +
geom_point(size = 3) +
labs(title = "Disp vs Weight",
x = "Weight",
y = "Displacement",
colour = "Miles per gallon")
mtcars |>
ggplot(aes(x = wt,
y = disp,
colour = mpg)) +
geom_point(size = 3) +
labs(title = "Disp vs Weight",
x = "Weight (1000 lbs)",
y = "Displacement",
colour = "Miles per gallon")
mtcars |>
ggplot(aes(x = wt,
y = disp,
colour = mpg)) +
geom_point(size = 3) +
labs(title = "Disp vs Weight",
x = "Weight (1000 lbs)",
y = "Displacement",
colour = "Miles per gallon") +
scale_colour_viridis_c()
set.seed(1337)
library("tidymodels")
tidymodels::tidymodels_prefer()
mtcars <- mtcars |>
as_tibble()
mtcars |>
ggplot(aes(x = wt,
y = mpg,
colour = mpg)) +
geom_point(size = 3) +
labs(title = "Disp vs Weight",
x = "Weight (1000 lbs)",
y = "Displacement",
colour = "Miles per gallon") +
scale_colour_viridis_c()
mtcars |>
ggplot(aes(x = wt,
y = mpg)) +
geom_point(size = 3) +
labs(title = "Disp vs Weight",
x = "Weight (1000 lbs)",
y = "Displacement",
colour = "Miles per gallon")
mtcars |>
ggplot(aes(x = wt,
y = mpg),
colour = "steelblue") +
geom_point(size = 3) +
labs(title = "Disp vs Weight",
x = "Weight (1000 lbs)",
y = "Displacement",
colour = "Miles per gallon")
mtcars |>
ggplot(aes(x = wt,
y = mpg)) +
geom_point(size = 3,
colour = "steelblue") +
labs(title = "Disp vs Weight",
x = "Weight (1000 lbs)",
y = "Displacement",
colour = "Miles per gallon")
mtcars |>
select(mpg) |>
mean()
mtcars |>
select(mpg) |>
mean(na.rm = TRUE)
mtcars |>
select(mpg)
mtcars |>
pull(mpg) |>
mean(na.rm = TRUE)
mtcars |>
pull(mpg) |>
mean()
mpg_mean <- mtcars |>
pull(mpg) |>
mean()
mtcars |>
ggplot(aes(x = wt,
y = mpg)) +
geom_point(size = 3,
colour = "steelblue") +
geom_hline(yintercept = mpg_mean,
colour = "firebrick",
linetype = "dashed") +
labs(title = "Disp vs Weight",
x = "Weight (1000 lbs)",
y = "Displacement",
colour = "Miles per gallon")
mtcars |>
ggplot(aes(x = wt,
y = mpg)) +
geom_point(size = 3,
colour = "steelblue") +
geom_hline(yintercept = mpg_mean,
colour = "firebrick",
linetype = "dashed") +
labs(title = "Miles pr gallon vs Weight",
x = "Weight (1000 lbs)",
y = "Miles pr gallon",
colour = "Miles per gallon")
mtcars |>
ggplot(aes(x = wt,
y = mpg)) +
geom_point(size = 3,
colour = "steelblue") +
geom_hline(yintercept = mpg_mean,
colour = "firebrick",
linetype = "dashed") +
labs(title = "Miles pr Gallon vs Weight",
x = "Weight (1000 lbs)",
y = "Miles pr Gallon",
colour = "Miles per gallon")
