Set seed and load packages.
```{r}
#| output: FALSE
#| code-fold: true
#| code-summary: "Show the code"

set.seed(1337)

library("tidymodels")
tidymodels::tidymodels_prefer()
library("umap")
```

Load data.
```{r}
#| output: FALSE
#| code-fold: true
#| code-summary: "Show the code"

count_matrix_clr <- readr::read_rds("https://github.com/WilliamH-R/BioStatistics/raw/main/data/count_matrix/count_matrix_clr.rds") |> 
  select(-"NA")

meta <- read.csv(file = "data/metadata.txt") |> 
  as_tibble() |>
  select(Run, chem_administration, ETHNICITY, geo_loc_name,
         Host_age, host_body_mass_index, Host_disease, host_phenotype, host_sex) |> 
  rename(Sample = Run,
         Treatment = chem_administration,
         Ethnicity = ETHNICITY,
         Location = geo_loc_name,
         Age = Host_age,
         BMI = host_body_mass_index,
         Disease_severity = Host_disease,
         EDSS = host_phenotype,
         Sex = host_sex) |>
  mutate(Patient_status = case_when(Disease_severity == "1HealthyControl" ~ "Healthy",
                                    TRUE ~ "MS"),
         EDSS = as.factor(EDSS),
         EDSS = case_when(is.na(EDSS) & Disease_severity == "1HealthyControl" ~ "-1",
                          is.na(EDSS) & Disease_severity != "1HealthyControl" ~ "Unknown",
                          TRUE ~ EDSS),
         EDSS = as.factor(EDSS))
```

# Uniform Manifold Approximation and Projection

```{r}
iris.data <- iris[, grep("Sepal|Petal", colnames(iris))]
iris.labels <- iris[, "Species"] |> 
  as_tibble()

iris.umap <- umap(iris.data)


iris.umap.plot <- iris.umap$layout |>
  as_tibble() |>
  bind_cols(iris.labels)

iris.umap.plot |> 
  ggplot(aes(x = V1,
             y = V2,
             col = value)) +
  geom_point()
```

```{r}
count_matrix_umap <- count_matrix_clr |>
  tibble::column_to_rownames(var = "Sample") |>
  umap()

count_matrix_umap$layout |> 
  as_tibble(rownames = "Sample") |> 
  left_join(meta |> select(Sample, Patient_status),
            by = "Sample") |>
  ggplot(aes(x = V1,
             y = V2,
             col = Patient_status)) +
  geom_point()
```


```{r}
count_matrix_pca_umap <- count_matrix_clr |> 
  column_to_rownames(var = "Sample") |>
  prcomp(center = TRUE,
         scale = TRUE) |>
  tidy(matrix = "x") |> 
  pivot_wider(names_from = "PC",
              names_prefix = "PC",
              values_from = "value") |> 
  rename(Sample = row) |>
  tibble::column_to_rownames(var = "Sample") |>
  select(1:7) |>
  umap()

count_matrix_pca_umap$layout |> 
  as_tibble(rownames = "Sample") |> 
  left_join(meta |> select(Sample, Patient_status),
            by = "Sample") |>
  ggplot(aes(x = V1,
             y = V2,
             col = Patient_status)) +
  geom_point()

```



# Session Info

```{r}
sessioninfo::session_info()
```